@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');  /* подключение шрифта робот */

/*  * { /* отменить все отступы по умолчанию и добавить свои. * - все элементы 
padding: 0;
margin: 0;
}  */

body {
  background-color: rgb(223, 217, 217);
  color: #0f141e;
font-size: 16px;  /* изменяет размер всех элементов в бади */

font-weight: normal;  /* изменяет жирность шрифта. все что до 500 это обычная жирность шрифта это нужно для разных шрифтов
как правило используют bold-жирный или normal bold 600-900   */
/*font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif ; /* шрифты 
1-е знач передается название шрифта, если его нет в браузере то будет пытаться подключить второй и тд если никакого шрифта нет то можно
самому выбрать семейство шрифтов Geneva, Verdana и если не находятся то юзается любой из sans-serif */
font-weight: normal;
font-family: 'Roboto', sans-serif; /* помимо подключения его нужно указать <--  */


/* font:normal 16px 'Roboto', sans-serif; /*это будет идентично тому что было написано выше */
}

/* пкм по страницу-> посмотреть код-> в элементах будет отображаться вся хтмл структура */
/* изменение по тегу будет изменять все такие теги. если надо точечно-то  */
 /*h1 {
    color: rgb(17, 17, 17);
} */
/* тестить стиль для тегов можно внутри браузера при просмотра кода и тогда наш стиль
 который мы делали для этого тега будет изменен и инлайн стиль от браузера будет по иерархии выше
 */

 /* чтобы изменять точечно в одинаковых тегах а не все теги нужно подключить класс и по нему изменять в цсс */


a {
  color: black;
  text-decoration: none;  /* убирает подчеркивание ссылок */
}

a:hover { /* hover - наведение мышки на ссылку*/
text-decoration: underline;  /* при наведении мыши ссылка подчеркивается */
}

a:active {
  color: blue; /* при нажатии и удерживании мышки на ссылке она становится синей */
}

a:visited { /* та ссылка которую мы уже посетили станет цвета описанного ниже */
color: blueviolet;
}



 .avatar    /* обращение к классу аватар */  {
    width: 200px;
    border-radius: 28px;  /* скругление углов картинки, 50% -  полностью круглая */
    /* .avatar - класс, #avatar - id */
    box-shadow: 4px 4px 14px rgba(0, 0, 0, 0.25); /* это сложное св-во тк в него применяется большое кол-во параметров. получаем тень. аватар-
    пкм-посмотреть код. в бокс шедоу будет вкладка где можно будет вручную настраивать визуальный конструктор */
    
    
}

.info {
  margin-bottom: 20px;
  display: flex;
}
/* ниже что делать чтобы не пидорасило аву и текст и была масштабируемость нормальная на разных девайсах */
@media (max-width: 700px) {  /* дальше указывается условие при котором данная media должна сработать (max-width) макс ширина
должна быть 700px и если так то тогда мы {описываем набор правил которые будут работать на ширине до 700px} */
.info {
  display: block; /* а в инфо стоит/стояло дисплей флекс */
 /* то при определенной ширине экрана текст в инфо перемещается вниз потому что это теперь display:block а не flex*/
text-align: center;
}
}


.info-text {    /* отступ между авой и текстом */
margin-left: 40px;
}

.info-text h4 { /* отступы текста в h4 */
  margin-bottom: 10px;
}

.info p {    /* изменение тега p в классе info */
color: #86898f;
margin: 0%;   /* убирает отступы */
font-style: italic;  /* делает наклонный текст как <em> */
font-weight: bold; /* жирный текст */
text-decoration: none; /* underline - подчеркивание, line-through зачеркивание, none - обычный */
}
/* text-transform: lowercase; /*  trxt-transform изменяет текст. :lowecase весь текст идет с маленьких букв uppercase весь текст с большой буквы 
capitalize каждое слово начинается с большой буквы*/ 
/* letter-spacing: 15px; кол-во пикселей которые будут находится между каждым символом */
/* word-spacing: 42px;  кол-во пространства между каждыми словами */


/* вместо класса можно написать ид, разница в том, что id должен быть уникальным, а классы могут повторяться, поэтому рекомендуется использовать классы */


/* дальше очень важная вещь box model */ 
.container {
  width: 750px;  /* отступ  тут все элементы container подстраиваются под ширину указанную в контейнере   также можно указывать px*/
  max-width: 750px; /* чтобы сайт адаптировался под ширину разных устройств и макс ширина была в 750px */
  margin: auto; /* все то что в контейнере - по центру */
  padding-top: 30px; /* отступы сверху авы и текста */
}

/* .social {  /* тк background имеет много параметров, то их можно объединять как и font, т.е прописывать в одном background */
/* background: rgb(0, 255, 234);  /* по умолчанию background: red занимает всю ширину страницы кроме небольших отступов тк они по умолчанию в браузере */
/* padding: 15px; /* добавление отступов в паддинге, т.е от края блока до контента , если поставить 0 то отступов не будет и контент будет примыкать к границам блока*/ 
/* padding: 15px 40px;   /* первый параметр верх и низ, второй право и лево*/
/* padding: 15px 20px 25px 30px;   /* 1-верх, 2-право, 3-низ, 4-лево 
padding-top: 15px;
padding-right: 20px;
padding-bottom: 25px;
padding-left: 5px;  это все так же работает и для margin */



/* border: 5px solid red; /* border- граница, 5px - ширина границы, solid- стиль границы, red- цвет границы 
border-bottom-style: dotted; /* нижняя граница в точку. если не добавить стайл она будет в точку, но верхнее правило цвета работать не будет*/
/* border-top-width: 15px;  /* ширина верхней границы */
/* border-right-color: royalblue; /* увет правой границы изменился  


margin: 20px;
} 
*/
/* т.к это box model то у каждого значения есть верхняя правая нижняя и левая часть и каждый из них можно настраивать отдельно  */

/* просмотр кода -  стрелочкой выбирается блок и в самом низу диаграмма показывающая идею box model
в центре размерность самого блока , дальше идут три слоя: padding border margin
padding - внутренние отступы в самом блоке , border- граница отступов, margin - внешние отступы, т.е н-р верхний отступ-  отступ от нижнего 
края предыдущего блока и нижний отступ- отступ до верхнего края след отступа  */

/* .box-model > div {    /* > div только дочерние дивы будут применять к себе эти стили 
float: left;
background-color: black; /* это все будет 4 элемента т.к внутри бокс модел 4 дива 
height: 200px;  /* у каждого дива будет ширина 25% * 4 = 100% по умолчанию размерность бордера и марджина не входит в полную ширину данного элемента 
border: 4px solid red; с этим правилом блоки не помещаюся во всю ширину 
width: 25%;
box-sizing: border-box; /* будут учитываться бордеры каждых 4 дивов для определения ширины и тогда все вместится
} 
*/

/* далее про условные общие компоненты */

.bg-yellow {
  background:  #fff9dc;
}

.bg-green {
  background:  #e5ffe7; 
}

.bg-red {
  background:  #ffe5e5; 
}
/* идея в том, что есть отдельный класс и его потом можно переиспользовать и сам card можно будет переиспользовать*/
/* например <h2 class="bg-red"> к нему бедт также применено все из bg-red */


.card {
  padding: 15px 20px;
  margin-bottom: 20px; /* отступы между блоками. рекоменд юзать его чтобы они отступали между собой */
  /* именно ботом потому что если удалить блок то будет норм, а если будет топ и также удалить то все пойдет по пизде */
  border-radius: 20px; /* скругление цветов блоков */
}

.card h2 {
  margin-bottom: 10px;
}

.list {   /* почему то в просмотре кода не отобразился ol.list пока я не добавила туда еще один li */
   padding: 0 0px; 
   /* list-style: none; /* убрались цифры */
}

.list li {
  color: #86898f;
  margin-bottom: 10px; /* отступы от каждого элеммента */
  /* border-bottom: 1px solid grey; /* solid - подчеркивание */
}

.table {
  width: 100%;
}

.table td { /* сказать что между тегами td отступы */
  /* margin-bottom: 10px; не будет работать из-за специфики таблиц, будет работать ниже */
  padding-bottom: 10px;

}

/* псевдо селекторы.  обращение в тегу -> обращение к псевдо селектору nth-child и в нем говорим какой элемент по порядку нам нужен*/
/* с помощью псевдо селекторов можно выбирать конкретный порядковы элемент и точечно его стилизовать */
.table td:nth-child(2),
 .table td:nth-child(3) {
  color: #86898f; /*колонка полностью серая */
}

/*  .table tr:nth-child(even) {   каждя четная строчка подсвечивается красным  even - четная  odd - нечетная 
  background: red;
} */

.link-list {
  list-style: none;
  padding: 0;
}

.link-list li {
 margin-bottom: 10px;
 padding-bottom: 5px; 
 border-bottom: 1px solid;
 border-color: #8f8686;
}

.contact h2 {
  text-align: center;  /* текст h2 в классе contact по центру, также есть right */
}


/* ваше имя ваш имеил и тд на одной строчке, т.к есть блочные элементы такие как div  так и строчные
такие как например label или специальный тег span. span как div только не блочный а строчный
и строчные элементы идут в одну строчку но его можно изменять с помощью св-ва display*/
/* т.е мы говорим что каждый из лейблов должен быть display: block */
.form-group label {
display: block;
font-size: 14px;
color: #86898f;
}

.form-group input,
.form-group textarea {
  width: 100%;  /* ширина по умолч указывается 100% чтобы они были по ширине родительского блока, проще управлять род-ким */
box-sizing: border-box;
border: none; /* убирается базовая граница */
background: transparent;   /* фон становится прозрачным, т.е фоном body */
border-bottom: 1px solid #ccc;  /* border:none обнуляются границы и потом задаются отдельно */
color: #000; /* значение цвета в инпуте т.е цвет текста куда мы вводим имя и тд*/
padding: 15px 0 10px; 
outline: none;   /* убрали цвет границы ввода при нажатии */
font-family: inherit; /* шрифт в инпуте соответствует нашему общему шрифту inherit - наследование */
}
/* вашен имя и ваш имейл на одной строчке в 50% ширины */

.row {
 display: flex;  /* элементы ваше имя ваш имейл на одной строчке как и поле ввода */
 /* display:none убирает все визуальные элементы */
 margin-bottom: 20px;
}

.row > .form-group {
  width: 50%;  /* обращение к форм группам чтобы между введите имя и введите имейл был 50% отступ */
  margin-right: 20px;
}

.row > .form-group:last-child {  /* выбор последнего элемента в псевдо селекторе*/
  margin-right: 0;
}

.btn {
  background: #111;
  padding: 15px 20px;
  color: #fff;
  border: none;
  font-family: inherit;
  cursor: pointer;  /* при наведении мыши стрелка становится указ пальцем */
}

.btn:hover { /* псевдо селектор */
opacity: 0.9;  /* при наведении цвет меняется чем меньше значение тем сильнее меняется цвет*/
}

/* Position */

/* .position {
position: relative;
border: 4px solid black;
margin-top: 40px;
padding: 20px;
height: 300px;
}

.box {
top: 0;
right: 0;
position: fixed; /* fixed то квадрат позиционируется относительно нашего окна, т.е перемещая страницу вверх
квадратик будет на том же месте относительно экрана */
/*fixed часто используется для навигации */
/* position: absolute; /* по дефолту задается static чтобы элемент стоял на месте и никуда не уходил */
/* absolute происходит потому, что когда идет абсолютное позиционирование то блок position не видит что этот контент
box находится внутри внутри блока */
/* когда мы задаем position: absolute и position fixed то нам открываются 4 доступных свойства н-р top */
/* top: 50px;  элемент улетает на самый верх страницы с отступом на 50px от верхнего края страницы */
/* по умолчанию если не соблюдены дополнительные условия то элементы с position: absolute розиционируются 
относительно нашего окна */
/* остальные св-ва left right bottom */
/* если мы хотим чтобы элемент позиционировался относительно блока position то тогда нужно задать родительскому
блоку тоже position:relative т.е относительное то получаем первоначальное состояние квадратика*/

/* т.е когда мы ставим позицию относительную, т.е относительно квадрата то св-ва бот топ и тд перемещают квадрат
в .position 

width: 50px;
height: 50px;
background: lightcoral;

} */